# Declarations
typ stevilo = int
var i : stevilo
var j : bool
# typ stevilo = 42
# var while : int
# typ if = bool

# Functions
fun compute() : void
fun sum(a : int, b : int) : int
    = a + b
# fun fun() : void
# fun ill_return() : 42
# fun comma(a : bool test : char) : void
# fun where_expr() : int = int
# fun test(a : int, b : int : void

# Types
typ _ = void
typ _ = char
typ _ = int
typ _ = bool

typ _ = stevilo 
typ _ = [3 - 5 * 2] char
typ _ = [2][2][2]^char
# typ _ = [3 * unclosed void
typ _ = ^stevilo
typ _ = { name : ^char, age : int, student : bool }
typ _ = (stevilo)

fun main() : void = {
    # Expressions
    5;
    # 5
    'c';
    '\'';
    "Hello World!";
    (true);
    i = sum(( j : int), 0);

    arr[5 + 3]^.name;
    # arr[3 * unclosed;
    5 + 2 * 3 % 2 - 6 / (a | false & true) where {
        var a : int 
    } where {
        var b : bool
    };

    true & true & true & true;
    5 * 5 * 5 * 5;
    4 - 4 - 3 - 2;

    5 + 3 != 2 * 4 where { typ tmp = int };

    new arr[3] - 2;
    !arr[0];
    ++5;

    # Statements
    i = 42;
    if test(i) then
        i = 3
    else {
        i = 4;
        j = true;
    };

    while i < 5 & j == true do  {
        a = 5 where { var a : int };
    };
    
}

# fun test() : void = {}

